package com.example.crudoperation;import javafx.event.ActionEvent;import javafx.fxml.FXML;import javafx.fxml.Initializable;import javafx.scene.Node;import javafx.scene.control.*;import javafx.scene.input.MouseEvent;import java.net.URL;import java.sql.*;import java.util.ResourceBundle;public class AddViewController implements Initializable {    String driver="com.mysql.cj.jdbc.Driver";    String databaseUrl="jdbc:mysql://localhost:3306/Javafx";    String userName ="root";    String password="";    Connection conn= DriverManager.getConnection(databaseUrl,userName,password);    private boolean operationDml=false;    @FXML    public Label lblStdInfo;    @FXML    public Button btnAdd;    @FXML    private TextField txtAddress;    @FXML    private TextField txtAge;    @FXML    private TextField txtMobile;    @FXML    private TextField txtName;    @FXML    private TextField txtParent;    @FXML    public TextField txtid;    int idNo=0;    public AddViewController() throws SQLException {    }    @FXML    void handle_close(MouseEvent event) {        ((javafx.scene.Node)(event.getSource())).getScene().getWindow().hide();    }    @FXML    public void clear(){        txtid.setText("");        txtName.setText("");        txtAge.setText("");        txtMobile.setText("");        txtParent.setText("");        txtAddress.setText("");    }    public void btnAdd(ActionEvent event) throws SQLException {        try {            if (txtid.getText().isEmpty() || txtName.getText().isEmpty() || txtAge.getText().isEmpty() || txtMobile.getText().isEmpty() ||            txtParent.getText().isEmpty() || txtAddress.getText().isEmpty()){                Alert a=new Alert(Alert.AlertType.WARNING);                a.setTitle("Warning");                a.setHeaderText(null);                a.setContentText("Blank is not allowed please fill ?");                a.showAndWait();            }            else {                int id= Integer.parseInt(txtid.getText());                String name=txtName.getText();                int age= Integer.parseInt(txtAge.getText());                String mobile=txtMobile.getText();                String parent=txtParent.getText();                String address=txtAddress.getText();                Statement st=conn.createStatement();                if (operationDml){                    update(new ActionEvent());                }                else {                    String sql="INSERT INTO STUDENT VALUES ('"+id+"','"+name+"' , '"+age+"' , '"+mobile+"' ,'"+parent+"' ,'"+address+"')";                    st.executeUpdate(sql);                    Alert al=new Alert(Alert.AlertType.INFORMATION);                    al.setContentText("Your Insert is successful");                    al.show();                    clear();                    ((Node)(event.getSource())).getScene().getWindow().hide();                }            }        }        catch (Exception ex){            Alert a=new Alert(Alert.AlertType.ERROR);            a.setTitle("Error");            a.setHeaderText(null);            a.setContentText(ex.getMessage());            a.showAndWait();            System.out.println(ex.getMessage());        }    }    public void inFlatUi(Student data){       try {           idNo=data.getId();           txtid.setText(String.valueOf(data.getId()));           txtName.setText(data.getName());           txtAge.setText(String.valueOf(data.getAge()));           txtMobile.setText(data.getMobile());           txtParent.setText(data.getParent());           txtAddress.setText(data.getAddress());           operationDml=true;       }       catch (Exception ex){           Alert a=new Alert(Alert.AlertType.ERROR);           a.setTitle("Error");           a.setHeaderText(null);           a.setContentText(ex.getMessage());           a.showAndWait();           System.out.println(ex.getMessage());       }    }    @Override    public void initialize(URL url, ResourceBundle resourceBundle) {    }    public void update(ActionEvent event) {        try {            if (txtid.getText().isEmpty() || txtName.getText().isEmpty() || txtAge.getText().isEmpty() || txtMobile.getText().isEmpty() ||                    txtParent.getText().isEmpty() || txtAddress.getText().isEmpty()){                Alert a=new Alert(Alert.AlertType.WARNING);                a.setTitle("Warning");                a.setHeaderText(null);                a.setContentText("Blank is not allowed please fill ?");                a.showAndWait();            }            else {                Alert al=new Alert(Alert.AlertType.CONFIRMATION,"Are you sure you want to update this " + idNo + " ?", ButtonType.YES, ButtonType.NO);                al.setHeaderText(null);                al.showAndWait();                if (al.getResult()==ButtonType.NO){                }                else {                    String name=txtName.getText();                    int age= Integer.parseInt(txtAge.getText());                    String mobile=txtMobile.getText();                    String parent=txtParent.getText();                    String address=txtAddress.getText();                    Statement st=conn.createStatement();                    if (operationDml){                        String sql="UPDATE STUDENT SET NAME ='"+name+"'  , AGE ='"+age+"' , MOBILE ='"+mobile+"' , PARENT ='"+parent+"' , ADDRESS ='"+address+"' where id ='"+idNo+"'";                        st.executeUpdate(sql);                        Alert al1=new Alert(Alert.AlertType.INFORMATION);                        al1.setContentText("Your Updated is successful");                        al1.show();                    }                    else {                    }                }            }        }        catch (Exception ex){            Alert a=new Alert(Alert.AlertType.ERROR);            a.setTitle("Error");            a.setHeaderText(null);            a.setContentText(ex.getMessage());            a.showAndWait();            System.out.println(ex.getMessage());        }    }}